24.플로이드와샬알고리즘

다익스트라 알고리즘은 하나의 정점에서 출발했을 때 다른 모든 정점으로의 최단 경로를 구하는 알고리즘이다.
'모든 정점'에서 '모든 정점'으로의 최단 경로를 구하고 싶다면 프롤이드 와샬 알고리즘을 사용해야 한다.

#include <stdio.h>

int number = 4;
int INF = 100000000;

int a[4][4] = {
	{0,5,INF,8},
	{7,0,9,INF},
	{2,INF,0,4},
	{INF,INF,3,0},
};

void floydWarshall() {
	//결과 그래프를 초기화합니다.
	int d[number][number];
	
	for(int i=0; i < number; i++) {
		
		for(int j = 0; j < number; j++) {
			
			d[i][j] = a[i][j];
		}
	} 
	
	
	for(int k=0; k < number; k++) {
		//i는 출발노드 
		for(int i=0; i < number; i++) {
			//j는 도착노드 
			for(int j = 0; j < number; j++){
				if(d[i][k] + d[k][j] < d[i][j]){
					d[i][j] = d[i][k] + d[k][j];
				}
			}
		}
	}
	
	for(int i=0; i < number; i++) {
		for(int j=0; j <number; j++) {
			printf("%d ", d[i][j]);
		}
		printf("\n");
	}
}

int main(void) {
	floydWarshall();
}

0 5 11 8
7 0 9 13
2 7 0 4
5 10 3 0

플로이드와샬알고리즘은 동적프로그래밍을 적용한다는 점에서 소스코드가 간편하다.
모든 정점에서 다른 모든 정점으로 가는 최소 거리를 나타내준다.
3중 for문을 사용한다는 점에서 N^3의 시간복잡도를 가지고 있다.
