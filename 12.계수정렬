11. 계수 정렬

이전에 배운 정렬 방법들 보다 더 빠르게 정렬이 필요한 경우에는 어떻게 해야할까

범위 조건이 있는 경웨 한해서 매우 빠른 알고리즘이 있다.
속도가 무려 O(N)이다.

특징 : 카운팅, 센다는 의미를 가지는 알고리즘이다.
기준이 크기 인 것이다.
더 빠르게 갯수를 세서 정렬을 시켜보자.

위치를 바꾸어 가면서 정렬하는 알고리즘이었지만, 계수 정렬은 크기를 기준으로 갯수만 세주면 되기 때문에 위치를 바꾸어 줄 필요가 없다.

#include <stdio.h>

 int main(void) {
 	int temp;
 	int count[5];
 	int array[30] = {1,3,2,4,3,2,5,3,1,2,3,4,4,3,5,1,2,3,5,2,3,1,4,3,5,1,2,1,1,1};
 	
 	for(int i = 0; i < 5; i++) {
 		count[i] = 0;
	 }
	 
	 for(int i=0; i < 30; i++) {
	 	count[array[i] - 1]++;
	 }
	 
	 for(int i = 0; i < 5; i++) {
	 	if(count[i] != 0){
	 		for(int j=0; j<count[i]; j++){
	 			printf("%d", i+1);
			 }
		 }
	 }
	 
	 
	 return 0;
	 
	 
 }
 
 실행결과 : 111111112222223333333344445555
 
 -----------------------------
 
 데이터의 크기가 한정되어 있을때 한해서만, 빠르게 사용할 수 있는 알고리즘 : 계수 정렬.
